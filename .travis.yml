language: java # set desired language

sudo: required
dist: trusty

jdk:
      - oraclejdk8
addons:
  apt:
    sources:
      - google-chrome # if your project contains tests need to be run on chrome include these lines
    packages:
      - google-chrome-stable
      - oracle-java8-installer

addons:
   firefox: "52.0.1" # if your project contains tests need to be run on firefox include these lines


before_install:
  # - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024" # running virtual display on desired port with desired settings
  - "sudo apt-get install unzip"
  - "wget http://chromedriver.storage.googleapis.com/LATEST_RELEASE"
  - "read CHROMEDRIVER_LATEST_RELEASE < LATEST_RELEASE"
  - "wget -N http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_LATEST_RELEASE/chromedriver_linux64.zip"
  - "unzip chromedriver_linux64.zip"
  - "chmod +x chromedriver"
  - "sudo mv -f chromedriver /src/tests/resources/chromedriver"
  - "sudo ln -s /src/tests/resources/chromedriver"
  - "sudo ln -s /src/tests/resources/chromedriver"
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3


before_script:
  # Selenium server
  - java -jar selenium-server-standalone-3.0.1.jar > /dev/null 2>/dev/null & # starting selenium-server
  - sleep 20
  # gives enough time to Selenium to start

script:
  - mvn test
  #-B -X
  # perform build and run commands here
  #- %your_framework build command%
  #- %your_framework run command%